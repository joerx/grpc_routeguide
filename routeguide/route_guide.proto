syntax = "proto3";

package routeguide;

service RouteGuide {
  // Obtains feature at a given position
  rpc GetFeature(Point) returns (Feature) {}

  // Obtains all features within a given rectangle
  rpc ListFeatures(Rectangle) returns (stream Feature) {}

  // Accepts stream of points as a route is traversed, returns summary when done
  rpc RecordRoute(stream Point) returns (RouteSummary) {}

  // Accepts stream of RouteNotes as a route is being traversed, receives notes 
  // from other users
  rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

// A Point is represented as latitude-longitude pair in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

// A Rectangle defined by diagonally opposite corners
message Rectangle {
  // One corner of rectangle
  Point lo = 1;
  // Another corner of rectangle
  Point hi = 2;
}

// A Feature is something worthy of having a name at a given point
message Feature {
  // Name of feature
  string name = 1;
  // Location of feature
  Point location = 2;
}

// A RouteNote is a message sent at a given point
message RouteNote {
  // Message content
  string message = 1;
  // Location the message was sent from
  Point location = 2;
}

// A RouteSummary is received as a response to a RecordRoute rpc
message RouteSummary {
  // Number of points traversed
  int32 point_count = 1;
  // Number of features on the route
  int32 feature_count = 2;
  // Total distance travelled
  int32 distance = 3;
  // Elapsed time on route
  int32 elapsed_time = 4;
}
